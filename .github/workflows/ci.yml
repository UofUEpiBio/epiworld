# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: Tests

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    strategy:
      matrix:
        include:
          # macOS configurations
          - os: macos-latest
            llvm: 14
            std: c++20
            container: ''
          - os: macos-latest
            llvm: 18
            std: c++2b
            container: ''
          # Ubuntu configuration
          - os: ubuntu-latest
            llvm: ''
            std: ''
            container: gvegayon/epiworld:latest

    container: ${{ matrix.container || '' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install LLVM (macOS only)
        if: runner.os == 'macOS'
        run: brew install llvm@${{ matrix.llvm }}

      - name: Check (macOS)
        if: runner.os == 'macOS'
        env:
          CXX_STD: -std=${{ matrix.std }}
        run: |
          echo "export PATH=\"/usr/local/opt/llvm@${{ matrix.llvm }}/bin:$PATH\"" >> $HOME/.bash_profile
          cd tests && make main.a && ./main.a

      - name: Check (Ubuntu)
        if: runner.os == 'Linux'
        env:
          OPENMP: -fopenmp
        run: |
          cd tests
          make main.o
          ./main.o

  test-epiworld-r:
    runs-on: ubuntu-latest
    container: rocker/r2u:latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: UofUEpiBio/epiworldR
          path: ./r-pkg

      - name: Getting epiworldR
        run: |
          install2.r knitr rmarkdown tinytest netplot igraph data.table DiagrammeR
          apt-get update && apt-get install -y --no-install-recommends pandoc
          cp -r include/epiworld/ r-pkg/inst/include/epiworld/
          R CMD build r-pkg
          R CMD check --no-manual epiworldR_*.tar.gz

  test-epiworld-py:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: UofUEpiBio/epiworldPy
          path: ./py-pkg

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13.0

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Copy headers
        run: cp -r include/epiworld py-pkg/include

      - name: Create venv and install package
        working-directory: ./py-pkg
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install --verbose .[test]

      - name: Run tests
        working-directory: ./py-pkg
        run: |
          source .venv/bin/activate
          uv run -m pytest

  test-epiworld-r-valgrind:
    runs-on: ubuntu-latest
    container: rocker/r2u:latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: UofUEpiBio/epiworldR
          path: ./r-pkg

      - name: Getting epiworldR
        run: |
          install2.r knitr rmarkdown tinytest netplot igraph data.table DiagrammeR
          apt-get update && apt-get install -y --no-install-recommends \
            pandoc valgrind
          cp -r include/epiworld/ r-pkg/inst/include/epiworld/
          R CMD build r-pkg
          R CMD check --no-manual --use-valgrind epiworldR_*.tar.gz
